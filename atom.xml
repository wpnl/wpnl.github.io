<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>锟斤拷哒</title>
  <icon>https://www.gravatar.com/avatar/9821c5879313d50dd8d5530069a6fa91</icon>
  <subtitle>0xEFBF0xBDEF0xBDEF</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-03T12:24:03.852Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Fwfeng</name>
    <email>532118819@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTMl5的sessionStorage和localStorage</title>
    <link href="http://yoursite.com/2017/07/HTML5-storage/"/>
    <id>http://yoursite.com/2017/07/HTML5-storage/</id>
    <published>2017-07-20T11:27:00.000Z</published>
    <updated>2019-08-03T12:24:03.852Z</updated>
    
    <content type="html"><![CDATA[<p>说说<code>LocalStorage</code>与<code>SessionStorage</code>的关系、以及<code>Cookie</code>与它们的区别。 </p><a id="more"></a><h3 id="sessionStorage和localStorage的关系"><a href="#sessionStorage和localStorage的关系" class="headerlink" title="sessionStorage和localStorage的关系"></a>sessionStorage和localStorage的关系</h3><p>Html5中的<code>Web Storage</code>包括了两种存储方式：<code>sessionStorage 和 localStorage</code>。</p><blockquote><ul><li><code>sessionStorage</code>用于本地存储一个会话<code>（session）</code>中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此<code>sessionStorage</code>不是一种持久化的本地存储，仅仅是会话级别的存储。</li><li>而<code>localStorage</code>用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。</li></ul></blockquote><h3 id="Cookie的概念"><a href="#Cookie的概念" class="headerlink" title="Cookie的概念"></a>Cookie的概念</h3><blockquote><p><code>Cookie</code>是小甜饼的意思。顾名思义，<code>cookie</code> 确实非常小，它的大小限制为4KB左右，是网景公司的前雇员 Lou Montulli 在1993年3月的发明。它的主要用途有保存登录信息，比如你登录某个网站市场可以看到“记住密码”，这通常就是通过在<code>Cookie</code>中存入一段辨别用户身份的数据来实现的。</p></blockquote><h3 id="三者的区别"><a href="#三者的区别" class="headerlink" title="三者的区别"></a>三者的区别</h3><ol><li><strong>数据的生命周期</strong><br><code>Cookie</code>：一般由服务器生成，可设置失效时间。如果在浏览器端生成Cookie，默认是关闭浏览器后失效。<br><code>localStorage</code>：除非被清除，否则永久保存。<br><code>sessionStorage</code>：仅在当前会话下有效，关闭页面或浏览器后被清除。</li><li><strong>存放数据大小</strong><br><code>Cookie</code>：4KB左右。<br><code>localStorage 和 sessionStorage</code>：一般为5MB。</li><li><strong>与服务器端通信</strong><br><code>Cookie</code>：每次都会携带在HTTP头中，如果使用cookie保存过多数据会带来性能问题。<br><code>localStorage 和 sessionStorage</code>：仅在客户端（即浏览器）中保存，不参与和服务器的通信。</li></ol><p><strong>总的来说</strong>：<br><strong><code>Web Storage</code>的概念和<code>cookie</code>相似，区别是它是为了更大容量存储设计的。<br><code>Cookie</code>的大小是受限的，并且每次你请求一个新的页面的时候<code>Cookie</code>都会被发送过去，这样无形中浪费了带宽。<br>另外<code>cookie</code>还需要指定作用域，不可以跨域调用。<br>但是<code>Cookie</code>也是不可以或缺的：<code>Cookie</code>的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而<code>Web Storage</code>仅仅是为了在本地“存储”数据而生。</strong></p><h3 id="localStorage-和-sessionStorage的方法"><a href="#localStorage-和-sessionStorage的方法" class="headerlink" title="localStorage 和 sessionStorage的方法"></a>localStorage 和 sessionStorage的方法</h3><h4 id="setItem存储value"><a href="#setItem存储value" class="headerlink" title="setItem存储value"></a><code>setItem</code>存储<code>value</code></h4><p>用途：将value存储到key字段<br>用法：.setItem( key, value)<br>代码示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sessionStorage.setItem(<span class="string">"key"</span>, <span class="string">"value1"</span>)</span><br><span class="line">localStorage.setItem(<span class="string">"site"</span>, <span class="string">"value2"</span>);</span><br></pre></td></tr></table></figure><h4 id="getItem获取value"><a href="#getItem获取value" class="headerlink" title="getItem获取value"></a><code>getItem</code>获取<code>value</code></h4><p>用途：获取指定key本地存储的值<br>用法：.getItem(key)<br>代码示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> value = sessionStorage.getItem(<span class="string">"key"</span>)</span><br><span class="line"><span class="keyword">let</span> site = localStorage.getItem(<span class="string">"site"</span>)</span><br></pre></td></tr></table></figure><h4 id="removeItem删除key"><a href="#removeItem删除key" class="headerlink" title="removeItem删除key"></a><code>removeItem</code>删除<code>key</code></h4><p>用途：删除指定key本地存储的值<br>用法：.removeItem(key)<br>代码示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sessionStorage.removeItem(<span class="string">"key"</span>)</span><br><span class="line">localStorage.removeItem(<span class="string">"site"</span>)</span><br></pre></td></tr></table></figure><h4 id="clear清除所有的key-value"><a href="#clear清除所有的key-value" class="headerlink" title="clear清除所有的key/value"></a><code>clear</code>清除所有的<code>key/value</code></h4><p>用途：清除所有的key/value<br>用法：.clear()<br>代码示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sessionStorage.clear()</span><br><span class="line">localStorage.clear()</span><br></pre></td></tr></table></figure><h4 id="其他操作方法：-操作和"><a href="#其他操作方法：-操作和" class="headerlink" title="其他操作方法：.操作和[]"></a>其他操作方法：<code>.</code>操作和<code>[]</code></h4><p>web Storage不但可以用自身的<code>setItem,getItem</code>等方便存取，也可以像普通对象一样用点<code>(.)</code>操作符，及<code>[]</code>的方式进行数据存储，像如下的代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> storage = <span class="built_in">window</span>.localStorage</span><br><span class="line">storage.key1 = <span class="string">"value1"</span></span><br><span class="line">storage[<span class="string">"key2"</span>] = <span class="string">"value2"</span></span><br><span class="line"><span class="built_in">console</span>.log(storage.key1)  <span class="comment">//  value1</span></span><br><span class="line"><span class="built_in">console</span>.log(storage[<span class="string">"key2"</span>])  <span class="comment">//  value2</span></span><br></pre></td></tr></table></figure><h4 id="localStorage-和-sessionStorage的遍历"><a href="#localStorage-和-sessionStorage的遍历" class="headerlink" title="localStorage 和 sessionStorage的遍历"></a><code>localStorage 和 sessionStorage</code>的遍历</h4><p><code>sessionStorage 和 localStorage</code>提供的<code>key() 和 length</code>可以方便的实现存储的数据遍历<br>代码示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> storage = <span class="built_in">window</span>.localStorage</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i=<span class="number">0</span>;i &lt; storage.length;i++)&#123;</span><br><span class="line">  <span class="keyword">let</span> key = storage.key(i)</span><br><span class="line">  <span class="keyword">let</span> value = storage.getItem(key)     </span><br><span class="line">  <span class="built_in">console</span>.log(key + <span class="string">"="</span> + value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="storage事件"><a href="#storage事件" class="headerlink" title="storage事件"></a><code>storage</code>事件</h4><p><code>storage</code>还提供了<code>storage</code>事件，当<code>键值</code>改变或者<code>clear</code>的时候，就可以触发<code>storage</code>事件，如下面的代码就添加了一个storage事件改变的监听：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.addEventListener)&#123;</span><br><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">"storage"</span>,handle_storage,<span class="literal">false</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.attachEvent)&#123;</span><br><span class="line">  <span class="built_in">window</span>.attachEvent(<span class="string">"onstorage"</span>,handle_storage)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handle_storage</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> ev = ev || <span class="built_in">window</span>.ev </span><br><span class="line">  <span class="comment">//  其中storage事件有以下属性</span></span><br><span class="line">  ev.key  <span class="comment">//  存储store的key名。</span></span><br><span class="line">  ev.oldValue  <span class="comment">//  更新前的值。如果该键为新增加，则这个属性为null。 </span></span><br><span class="line">  ev.newValue  <span class="comment">//  更新后的值，如果该键被删除，则这个属性为null。</span></span><br><span class="line">  ev.url  <span class="comment">//  原始触发storage事件的那个网页的网址。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说说&lt;code&gt;LocalStorage&lt;/code&gt;与&lt;code&gt;SessionStorage&lt;/code&gt;的关系、以及&lt;code&gt;Cookie&lt;/code&gt;与它们的区别。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="html5" scheme="http://yoursite.com/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>for...in和for...of循环的区别</title>
    <link href="http://yoursite.com/2017/07/for-in-and-for-of/"/>
    <id>http://yoursite.com/2017/07/for-in-and-for-of/</id>
    <published>2017-07-10T06:26:00.000Z</published>
    <updated>2019-08-03T12:24:08.037Z</updated>
    
    <content type="html"><![CDATA[<p>简单了解下…..</p><a id="more"></a><h3 id="for-in测试"><a href="#for-in测试" class="headerlink" title="for in测试"></a><code>for in</code>测试</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line"><span class="keyword">let</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>])</span><br><span class="line"><span class="keyword">let</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">'a'</span>,<span class="number">1</span>],[<span class="string">'b'</span>,<span class="number">2</span>],[<span class="string">'c'</span>,<span class="number">3</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment">//  遍历数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> x <span class="keyword">in</span> a)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x)  <span class="comment">//  得到的是下标 0 1 2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> x <span class="keyword">in</span> s)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x)  <span class="comment">//  不起作用，无法遍历Set</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> x <span class="keyword">in</span> m)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x)  <span class="comment">//  不起作用，无法遍历Map</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for-of测试"><a href="#for-of测试" class="headerlink" title="for of测试"></a><code>for of</code>测试</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line"><span class="keyword">let</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'c'</span>])</span><br><span class="line"><span class="keyword">let</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">'a'</span>,<span class="number">1</span>],[<span class="string">'b'</span>,<span class="number">2</span>],[<span class="string">'c'</span>,<span class="number">3</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment">//  遍历数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> x <span class="keyword">of</span> a)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x)  <span class="comment">//  得到的是值 a b c</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> x <span class="keyword">of</span> s)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x)  <span class="comment">//  得到的是值 a b c</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> [key,value] <span class="keyword">of</span> m)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(key)  <span class="comment">//  得到的是key值 a b c</span></span><br><span class="line">  <span class="built_in">console</span>.log(value)  <span class="comment">//  得到的是value值 1 2 3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for-in的问题"><a href="#for-in的问题" class="headerlink" title="for in的问题"></a><code>for in</code>的问题</h3><p><strong><code>for in</code>遍历的实际上是对象的属性名称。一个<code>Array</code>数组也是一个对象，数组中的每个元素的索引被视为属性名称，所以我们可以看到使用<code>for...in</code>循环<code>Array</code>数组时，拿到的其实是每个元素的索引。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line">a.name = <span class="string">'wpnl'</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> x <span class="keyword">in</span> a)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x)  <span class="comment">//  0 1 2 name</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上所示，当我们为a多手动添加一个属性<code>name</code>的时候，<code>for...in</code>循环会把name属性也包括在内，而<code>Array</code>的<code>length</code>属性却不包括在内。</p><p><code>for...of</code>循环则不存在上述的问题，它只循环集合本身的元素。这就是为什么引入<code>for...of</code>循环。所以<code>for...of</code>循环功能比较好，推荐使用</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><code>for-of</code>循环的几个特征</p><ul><li>这是最简洁、最直接的遍历数组元素的语法。</li><li>这个方法避开了<code>for-in</code>循环的所有缺陷。</li><li>与<code>forEach</code>不同的是，它可以正确响应<code>break、continue 和 return</code>语句。</li><li>其不仅可以遍历数组，还可以遍历类数组对象和其他可迭代对象。</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单了解下…..&lt;/p&gt;
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>移动meta通用设置</title>
    <link href="http://yoursite.com/2017/06/meta/"/>
    <id>http://yoursite.com/2017/06/meta/</id>
    <published>2017-06-29T08:11:00.000Z</published>
    <updated>2019-08-03T12:23:54.980Z</updated>
    
    <content type="html"><![CDATA[<p>关于移动端 <code>&lt;meta&gt;</code> 的一些配置。</p><a id="more"></a><p>一个常用的针对移动网页优化过的页面的 viewport meta 标签大致如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"</span> <span class="attr">name</span>=<span class="string">"viewport"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>width</code>：控制 viewport 的大小,如 device-width 为设备的宽度。</li><li><code>height</code>：和 width 相对应，指定高度。</li><li><code>initial-scale</code>：初始缩放比例，也即是当页面第一次 load 的时候缩放比例。</li><li><code>maximum-scale</code>：允许用户缩放到的最大比例。</li><li><code>minimum-scale</code>：允许用户缩放到的最小比例。</li><li><code>user-scalable</code>：用户是否可以手动缩放。</li></ul><hr><p>下面是移动端 <code>&lt;meta&gt;</code> 的通用设置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 避免IE使用兼容模式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 关键字描述 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"HandheldFriendly"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 删除苹果默认的工具栏和菜单栏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 设置苹果工具栏颜色 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"black"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telphone=no, email=no"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- uc强制竖屏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"screen-orientation"</span> <span class="attr">content</span>=<span class="string">"portrait"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- QQ强制竖屏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-orientation"</span> <span class="attr">content</span>=<span class="string">"portrait"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- UC强制全屏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"full-screen"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- QQ强制全屏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-fullscreen"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- UC应用模式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"browsermode"</span> <span class="attr">content</span>=<span class="string">"application"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- QQ应用模式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-page-mode"</span> <span class="attr">content</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- windows phone 点击无高光 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-tap-highlight"</span> <span class="attr">content</span>=<span class="string">"no"</span>&gt;</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于移动端 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 的一些配置。&lt;/p&gt;
    
    </summary>
    
    
      <category term="meta" scheme="http://yoursite.com/tags/meta/"/>
    
  </entry>
  
  <entry>
    <title>移动端最小物理像素的实现(border:1px)</title>
    <link href="http://yoursite.com/2017/06/border1px/"/>
    <id>http://yoursite.com/2017/06/border1px/</id>
    <published>2017-06-26T10:22:00.000Z</published>
    <updated>2019-08-03T12:24:05.831Z</updated>
    
    <content type="html"><![CDATA[<p>关于移动端实现最小物理像素1px边框实现。</p><a id="more"></a><p>这个方法的原理很简单 就是通过伪类::after，配合css3的属性进行缩放。下面是代码的方法。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/*首先为每一个class添加一个相对定位*/</span></span><br><span class="line"><span class="selector-class">.border-1px</span>, <span class="selector-class">.border-bottom-1px</span>, <span class="selector-class">.border-top-1px</span>, <span class="selector-class">.border-left-1px</span>, <span class="selector-class">.border-right-1px</span> &#123;</span><br><span class="line">   <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*底边边框一像素*/</span></span><br><span class="line"><span class="selector-class">.border-bottom-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">""</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute; </span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(*,*,*);  <span class="comment">/*边框颜色自行修改*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*上边边框一像素*/</span></span><br><span class="line"><span class="selector-class">.border-top-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">   <span class="attribute">content</span>:<span class="string">""</span>;</span><br><span class="line">   <span class="attribute">position</span>: absolute; </span><br><span class="line">   <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">   <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(*,*,*);  <span class="comment">/*边框颜色自行修改*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*左边边框一像素*/</span></span><br><span class="line"><span class="selector-class">.border-left-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">   <span class="attribute">content</span>:<span class="string">""</span>;</span><br><span class="line">   <span class="attribute">position</span>: absolute; </span><br><span class="line">   <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">   <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(*,*,*);  <span class="comment">/*边框颜色自行修改*/</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*右边边框1像素*/</span></span><br><span class="line"><span class="selector-class">.border-right-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">position</span>: absolute; </span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(*,*,*);  <span class="comment">/*边框颜色自行修改*/</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*边框一像素*/</span></span><br><span class="line"><span class="selector-class">.border-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">   <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">   <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">   <span class="attribute">position</span>: absolute;</span><br><span class="line">   <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(*,*,*);  <span class="comment">/*边框颜色自行修改*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后在总的样式表里加上不同的设备像素比对应不同的样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*设备像素比*/</span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> only screen and (-webkit-min-device-pixel-ratio: <span class="number">2.0</span>), only screen and (min-resolution: <span class="number">2dppx</span>) &#123;</span><br><span class="line">    <span class="selector-class">.border-bottom-1px</span><span class="selector-pseudo">::after</span>, <span class="selector-class">.border-top-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scaleY</span>(0.5);</span><br><span class="line">    &#125;  </span><br><span class="line">   <span class="selector-class">.border-left-1px</span><span class="selector-pseudo">::after</span>, <span class="selector-class">.border-right-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scaleX</span>(0.5);</span><br><span class="line">    &#125; </span><br><span class="line">   <span class="selector-class">.border-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200%</span>;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(0.5);</span><br><span class="line">        <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设备像素比*/</span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> only screen and (-webkit-min-device-pixel-ratio: <span class="number">3.0</span>), only screen and (min-resolution: <span class="number">3dppx</span>) &#123;</span><br><span class="line">    <span class="selector-class">.border-bottom-1px</span><span class="selector-pseudo">::after</span>, <span class="selector-class">.border-top-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scaleY</span>(0.333);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="selector-class">.border-left-1px</span><span class="selector-pseudo">::after</span>, <span class="selector-class">.border-right-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scaleX</span>(0.333);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="selector-class">.border-1px</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">300%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">300%</span>;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(0.333);</span><br><span class="line">        <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于设备像素比可以去看张鑫旭老师的博客：<a href="http://www.zhangxinxu.com/wordpress/2012/08/window-devicepixelratio/" target="_blank" rel="noopener">设备像素比devicePixelRatio简单介绍</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于移动端实现最小物理像素1px边框实现。&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>移动端高清显示屏Retina的原理</title>
    <link href="http://yoursite.com/2017/06/Retina/"/>
    <id>http://yoursite.com/2017/06/Retina/</id>
    <published>2017-06-24T05:32:00.000Z</published>
    <updated>2019-08-03T12:25:22.346Z</updated>
    
    <content type="html"><![CDATA[<p>最近在学习移动端开发的时候，发现了很多与pc端不同的问题，其中最普遍的就是关于ppi、设备像素比之类的概念，下面是关于retina高清显示屏原理，了解这个，就能明白为什么移动端的像素与pc端开发的项目不同。</p><a id="more"></a><h3 id="高清显示屏特征"><a href="#高清显示屏特征" class="headerlink" title="高清显示屏特征"></a>高清显示屏特征</h3><ol><li>一种具备超高像素密度的显示屏</li><li>同样大小的屏幕上显示的像素点由1个变为多个</li></ol><p><img src="/assets/images/retina.jpg" alt="高清显示屏"></p><hr><h3 id="高清显示屏下图片变模糊"><a href="#高清显示屏下图片变模糊" class="headerlink" title="高清显示屏下图片变模糊"></a>高清显示屏下图片变模糊</h3><p>了解高清显示屏的原理，如果我们把两张相同的照片放在一台普通显示屏，一台高清显示屏，在同样大小的屏幕上，高清显示屏中的位图会被放大，图片会变得模糊。</p><p>比如像下面右边的图片变模糊了，原因是高清显示屏显示的像素点相比普通显示屏的像素点由1个变为4个，但位置大小还是没有改变，换个意思就是图片被放大了一倍。</p><p><img src="/assets/images/jobs.jpg" alt="高清显示屏与普通显示屏"></p><hr><h3 id="关于-像素"><a href="#关于-像素" class="headerlink" title="关于[像素]"></a>关于[像素]</h3><h4 id="设备像素-device-pixel"><a href="#设备像素-device-pixel" class="headerlink" title="设备像素(device pixel)"></a>设备像素(device pixel)</h4><p>设备像素设是物理概念，指的是设备中使用的物理像素。<br>比如iPhone 5的分辨率640 x 1136px。</p><h4 id="CSS像素-css-pixel"><a href="#CSS像素-css-pixel" class="headerlink" title="CSS像素(css pixel)"></a>CSS像素(css pixel)</h4><p>CSS像素是Web编程的概念，指的是CSS样式代码中使用的逻辑像素。<br>在CSS规范中，长度单位可以分为两类，绝对(absolute)单位以及相对(relative)单位。px是一个相对单位，相对的是设备像素(device pixel)。</p><p><strong>比如iPhone 5使用的是Retina视网膜屏幕，使用<code>2px x 2px的设备像素(device pixel) 代表1px x 1px的CSS像素(css pixel)</code>，所以设备像素数为640 x 1136px，而CSS逻辑像素数为320 x 568px。</strong></p><hr><h3 id="设备像素比-devicePixelRatio-设备像素与CSS像素之间的换算"><a href="#设备像素比-devicePixelRatio-设备像素与CSS像素之间的换算" class="headerlink" title="设备像素比:devicePixelRatio(设备像素与CSS像素之间的换算)"></a>设备像素比:devicePixelRatio(设备像素与CSS像素之间的换算)</h3><p>首先我们要理解2个概念</p><h4 id="物理像素-physical-pixel"><a href="#物理像素-physical-pixel" class="headerlink" title="物理像素(physical pixel)"></a>物理像素(physical pixel)</h4><p>一个物理像素是显示器(手机屏幕)上最小的物理显示单元，在操作系统的调度下，每一个设备像素都有自己的颜色值和亮度值。</p><h4 id="设备独立像素-density-independent-pixel"><a href="#设备独立像素-density-independent-pixel" class="headerlink" title="设备独立像素(density-independent pixel)"></a>设备独立像素(density-independent pixel)</h4><p>简单粗俗的来说就是css像素</p><h4 id="设备像素比-device-pixel-ratio"><a href="#设备像素比-device-pixel-ratio" class="headerlink" title="设备像素比(device pixel ratio)"></a>设备像素比(device pixel ratio)</h4><p><strong>设备像素比 = 物理像素 / 设备独立像素</strong></p><p>在javascript中，可以通过<code>window.devicePixelRatio</code>获取到当前设备的dpr。</p><p>通过计算 devicePixelRatio 的值，是可以区分普通显示屏和高清显示器，当devicePixelRatio值等于1时（也就是最小值），那么它普通显示屏，当devicePixelRatio值大于1(通常是2.0、3.0)，那么它就是高清显示屏。</p><p><strong>了解这个原理，当dpr&gt;1时候，正常的图片像素点与<code>物理像素</code>点个数不是1:1的关系，所以图片像素点不够，所有只能就近取色，从而导致图片模糊</strong></p><p>所以我们知道为什么现在移动端开发一般需要2-3套的图片尺寸大小，一套是用在dpr=1的，<br>一套是用在dpr=2的，一套是用在drp=3的。这样的图片显示才会正常。</p><hr><h3 id="关于Retina下，border：1px的问题"><a href="#关于Retina下，border：1px的问题" class="headerlink" title="关于Retina下，border：1px的问题"></a>关于Retina下，border：1px的问题</h3><p>其实设计师想要的1px，是希望在Retina下的0.5px。既最小的一个物理像素(这是retina下(dpr=2)下能显示的最小单位)。</p><p>一般常用的解决方法：<br><a href="http://fweifeng.com/2017/06/26/border1px.html" target="_blank" rel="noopener">移动端最小物理像素的实现(border:1px)</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在学习移动端开发的时候，发现了很多与pc端不同的问题，其中最普遍的就是关于ppi、设备像素比之类的概念，下面是关于retina高清显示屏原理，了解这个，就能明白为什么移动端的像素与pc端开发的项目不同。&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Html5标签之canvas</title>
    <link href="http://yoursite.com/2017/06/Html5-Canvas/"/>
    <id>http://yoursite.com/2017/06/Html5-Canvas/</id>
    <published>2017-06-17T14:40:00.000Z</published>
    <updated>2019-08-03T12:24:01.283Z</updated>
    
    <content type="html"><![CDATA[<p>在学习Html5中，感觉canvas非常多方法和命令，在不使用的过程中经常会忘掉，写这篇博文，是为了巩固自己的学习，顺便把知识点记录下来，以后可以遇到不懂时候可以复习，下面是canvas的主要内容。</p><a id="more"></a><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Canvas用于在网页展示图像，并且可以定制内容，基本上它是一个可以用JavaScript操作的位图（bitmap）。其实说白了他的作用就是能在文档中绘图，能做出一些特别的效果。</p><hr><h3 id="绘制简单图形"><a href="#绘制简单图形" class="headerlink" title="绘制简单图形"></a>绘制简单图形</h3><h4 id="使用getConetext-39-2d-39-方法，初始化平面图像环境-目前3d还不支持"><a href="#使用getConetext-39-2d-39-方法，初始化平面图像环境-目前3d还不支持" class="headerlink" title="使用getConetext(&#39;2d&#39;)方法，初始化平面图像环境(目前3d还不支持)"></a>使用<code>getConetext(&#39;2d&#39;)</code>方法，初始化平面图像环境(目前3d还不支持)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span><br></pre></td></tr></table></figure><h4 id="填充颜色方法"><a href="#填充颜色方法" class="headerlink" title="填充颜色方法"></a>填充颜色方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctx.fillStyle = <span class="string">'#666'</span>;  <span class="comment">//  设置填充颜色</span></span><br><span class="line">ctx.strokeStyle = <span class="string">'#000'</span>  <span class="comment">//  设置笔触颜色(边框)</span></span><br></pre></td></tr></table></figure><h4 id="绘制矩形"><a href="#绘制矩形" class="headerlink" title="绘制矩形"></a>绘制矩形</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ctx.strokeStyle = <span class="string">'#000'</span>  <span class="comment">//  设置笔触颜色(边框)</span></span><br><span class="line">ctx.fillStyle = <span class="string">'#666'</span>;  <span class="comment">//  设置填充颜色,要使用fill()才能显示</span></span><br><span class="line"><span class="comment">//  x：矩形左上角的x坐标  x：矩形左上角的y坐标</span></span><br><span class="line"><span class="comment">//  width：矩形的宽度  height：矩形的高度</span></span><br><span class="line">ctx.fillRect(x,y,width,height);</span><br></pre></td></tr></table></figure><h4 id="绘制空心矩形"><a href="#绘制空心矩形" class="headerlink" title="绘制空心矩形"></a>绘制空心矩形</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctx.strokeStyle = <span class="string">'#666'</span>;  <span class="comment">//  设置笔触颜色(边框)</span></span><br><span class="line">ctx.strokeRect(x,y,width,height);  <span class="comment">//  参数同上</span></span><br></pre></td></tr></table></figure><h4 id="清楚某个矩形区域的内容。"><a href="#清楚某个矩形区域的内容。" class="headerlink" title="清楚某个矩形区域的内容。"></a>清楚某个矩形区域的内容。</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctx.clearRect(x,y,width,height);  <span class="comment">//  参数同上</span></span><br></pre></td></tr></table></figure><hr><h3 id="绘制路径"><a href="#绘制路径" class="headerlink" title="绘制路径"></a>绘制路径</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ctx.beginPath();  <span class="comment">//  开始路径绘制</span></span><br><span class="line">ctx.moveTo(<span class="number">50</span>,<span class="number">50</span>);  <span class="comment">//  设置路径的起点</span></span><br><span class="line">ctx.lineTo(<span class="number">200</span>,<span class="number">200</span>);  <span class="comment">//  绘制一条到200,200的直线</span></span><br><span class="line">ctx.lineWidth = <span class="number">1</span>;  <span class="comment">//  设置线宽</span></span><br><span class="line">ctx.strokeStyle = <span class="string">'#666'</span>;  <span class="comment">//  设置线的颜色</span></span><br><span class="line">ctx.stroke();  <span class="comment">//  进行线的着色，输入这个命令线才会可见</span></span><br></pre></td></tr></table></figure><hr><h3 id="绘制圆形和扇形"><a href="#绘制圆形和扇形" class="headerlink" title="绘制圆形和扇形"></a>绘制圆形和扇形</h3><h4 id="绘制扇形的方法"><a href="#绘制扇形的方法" class="headerlink" title="绘制扇形的方法"></a>绘制扇形的方法</h4><p><code>ctx.arc(x,y,radius,startAngle,endAngle,anticlockwise)</code></p><p><code>x</code>和<code>y</code>参数是圆心坐标，<code>radius</code>是半径，<code>startAngle</code>和<code>endAngle</code>则是扇形的起始角度和终止角度（以狐度表示），<code>anticlockwise</code>表示作图是应该逆时针画<code>（true）</code>还是顺时针画<code>（false）</code>。</p><p><code>var hd = Math.PI/180 * 50;  //  角度转弧度公式</code><br><code>var jd = 180/Math.PI * hd;  //  弧度转角度公式</code></p><h4 id="绘制实心的圆形"><a href="#绘制实心的圆形" class="headerlink" title="绘制实心的圆形"></a>绘制实心的圆形</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ctx.beginPath(); </span><br><span class="line">ctx.arc(<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="built_in">Math</span>.PI*<span class="number">2</span>,<span class="literal">true</span>);</span><br><span class="line">ctx.fillStyle = <span class="string">'#666'</span>;</span><br><span class="line">ctx.fill();</span><br></pre></td></tr></table></figure><h4 id="绘制空心圆形"><a href="#绘制空心圆形" class="headerlink" title="绘制空心圆形"></a>绘制空心圆形</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ctx.beginPath();</span><br><span class="line">ctx.arc(<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="built_in">Math</span>.PI*<span class="number">2</span>,<span class="literal">true</span>);</span><br><span class="line">ctx.lineWidth = <span class="number">1</span>;</span><br><span class="line">ctx.strokeStyle = <span class="string">'#000'</span>;</span><br><span class="line">ctx.stroke();</span><br></pre></td></tr></table></figure><p><strong>绘制扇形只需要修改<code>startAngle</code>,<code>endAngle</code>参数就可以了</strong></p><hr><h3 id="绘制文本"><a href="#绘制文本" class="headerlink" title="绘制文本"></a>绘制文本</h3><h4 id="fillText-用于添加文本，strokeText-用于添加空心文本"><a href="#fillText-用于添加文本，strokeText-用于添加空心文本" class="headerlink" title="fillText()用于添加文本，strokeText()用于添加空心文本"></a><code>fillText()</code>用于添加文本，<code>strokeText()</code>用于添加空心文本</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ctx.font = <span class="string">'Bold 20px Arial'</span>;  <span class="comment">//  设置字体</span></span><br><span class="line">ctx.textAlign = <span class="string">'left'</span>;  <span class="comment">//  设置文本对齐方式</span></span><br><span class="line">ctx.fillStyle = <span class="string">'#666'</span>;  <span class="comment">//   设置文本填充颜色</span></span><br><span class="line">ctx.fillText(<span class="string">'wpnl'</span>,x,y);  <span class="comment">//  设置文本内容，x，y的坐标</span></span><br><span class="line">ctx.strokeText(<span class="string">'wpnl'</span>,<span class="number">10</span>,<span class="number">100</span>);  <span class="comment">//  绘制空心字</span></span><br></pre></td></tr></table></figure><p><em>绘制文本不能使文本断行，所以如果要生成多行文本，只能多次调用上面方法</em></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在学习Html5中，感觉canvas非常多方法和命令，在不使用的过程中经常会忘掉，写这篇博文，是为了巩固自己的学习，顺便把知识点记录下来，以后可以遇到不懂时候可以复习，下面是canvas的主要内容。&lt;/p&gt;
    
    </summary>
    
    
      <category term="html5" scheme="http://yoursite.com/tags/html5/"/>
    
  </entry>
  
</feed>
